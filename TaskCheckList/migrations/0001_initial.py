# Generated by Django 2.2.2 on 2019-10-03 00:03

import TaskCheckList.models
import datetime
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('CompanyMaintain', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='TaskChecklist',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('taskId', models.CharField(max_length=8)),
                ('taskTBMapping', models.CharField(default='Not Assigned', max_length=200)),
                ('taskDescription', models.CharField(max_length=200)),
                ('taskYear', models.IntegerField(max_length=4)),
                ('taskPeriod', models.IntegerField(choices=[(1, 'January'), (2, 'February'), (3, 'March'), (4, 'April'), (5, 'May'), (6, 'June'), (7, 'July'), (8, 'August'), (9, 'September'), (10, 'October'), (11, 'November'), (12, 'December')], max_length=2)),
                ('taskOccurence', models.CharField(choices=[('M', 'Monthly'), ('Q', 'Quarterly'), ('S', 'Semi-Annually'), ('A', 'Annually')], max_length=2)),
                ('isJE', models.CharField(choices=[('Yes', 'Yes'), ('No', 'No')], max_length=3)),
                ('pub_date', models.DateTimeField(verbose_name='date published')),
                ('due_date', models.DateField(default=datetime.date.today, verbose_name='Due Date')),
                ('dueMonthDay', models.IntegerField(default=1, max_length=2)),
                ('entity', models.ForeignKey(default=1, on_delete=django.db.models.deletion.PROTECT, related_name='entity_TaskChecklist', to='CompanyMaintain.userDefinedEntity')),
                ('taskOwnerId', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='subTaskChecklist',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('subTaskNumber', models.IntegerField(default=1, max_length=2)),
                ('subTaskDescription', models.CharField(max_length=200)),
                ('subTaskStatus', models.CharField(choices=[('NS', 'Not Started'), ('WT', 'Waiting on Preceding Task'), ('IP', 'In-Progress'), ('CT', 'Completed')], max_length=2)),
                ('docfile', models.FileField(default=False, upload_to=TaskCheckList.models.subTaskChecklist.File_Path)),
                ('taskId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='taskId_taskId', to='TaskCheckList.TaskChecklist')),
            ],
        ),
        migrations.AddConstraint(
            model_name='taskchecklist',
            constraint=models.UniqueConstraint(fields=('taskId', 'entity', 'taskPeriod', 'taskYear'), name='unique_EntityUser'),
        ),
        migrations.AddConstraint(
            model_name='subtaskchecklist',
            constraint=models.UniqueConstraint(fields=('taskId', 'subTaskNumber'), name='unique_Subtask'),
        ),
    ]
